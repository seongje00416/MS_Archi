version: '3'

services:
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    restart: always
    networks:
      - microservice-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  service-a:
    build:
      context: ./service-a
      dockerfile: Dockerfile
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JAVA_OPTS=-Xms256m -Xmx512m
    ports:
      - "8080:8080"
    depends_on:
      redis:
        condition: service_healthy
    restart: always
    networks:
      - microservice-network

  service-b:
    build:
      context: ./service-b-nest
      dockerfile: Dockerfile
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - NODE_ENV=production
    ports:
      - "8081:8081"
    depends_on:
      redis:
        condition: service_healthy
      service-a:
        condition: service_started
    restart: always
    networks:
      - microservice-network

volumes:
  redis-data:

networks:
  microservice-network:
    driver: bridge